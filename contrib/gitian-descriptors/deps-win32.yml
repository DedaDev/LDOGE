---
name: "litedoge"
suites:
- "lucid"
architectures:
- "i386"
packages: 
- "mingw32"
- "git-core"
- "zip"
- "faketime"
- "wine"
reference_datetime: "2011-01-30 00:00:00"
remotes: "https://github.com/ldoge/LDOGE.git"
files: "litedoge"
- "qt-win32-4.7.4-gitian.zip"
- "boost-win32-1.47.0-gitian.zip"
- "ppcoin-deps-0.0.1.zip"
- "openssl-1.0.1b.tar.gz"
- "db-4.8.30.NC.tar.gz"
- "miniupnpc-1.6.tar.gz"
- "zlib-1.2.7.tar.gz"
- "libpng-1.5.12.tar.gz"
- "qrencode-3.2.0.tar.bz2"
script: |
  #
  mkdir $HOME/qt
  cd $HOME/qt
  unzip ../build/qt-win32-4.7.4-gitian.zip
  cd $HOME/build/
  export PATH=$PATH:$HOME/qt/bin/
  #
  mkdir boost_1_47_0
  cd boost_1_47_0
  mkdir -p stage/lib
  unzip ../boost-win32-1.47.0-gitian.zip
  cd bin/$GBUILD_BITS
  for lib in *; do
    i586-mingw32msvc-ar rc ../../stage/lib/libboost_${lib}-mt-s.a $lib/*.o
    i586-mingw32msvc-ranlib ../../stage/lib/libboost_${lib}-mt-s.a
  done
  cd ../..
  mv include/boost .
  cd ..
  #
  unzip ppcoin-deps-0.0.1.zip
  #
  find -type f | xargs touch --date="$REFERENCE_DATETIME"
  #
  cd ppcoin
  mkdir -p $OUTDIR/src
  git archive HEAD | tar -x -C $OUTDIR/src
  cp $OUTDIR/src/doc/README_windows.txt $OUTDIR/readme.txt
  cp $OUTDIR/src/COPYING $OUTDIR/license.txt
  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1
  export FAKETIME=$REFERENCE_DATETIME
  export TZ=UTC
  $HOME/qt/src/bin/qmake -spec unsupported/win32-g++-cross MINIUPNPC_LIB_PATH=$HOME/build/miniupnpc MINIUPNPC_INCLUDE_PATH=$HOME/build/ BDB_LIB_PATH=$HOME/build/db-4.8.30.NC/build_unix BDB_INCLUDE_PATH=$HOME/build/db-4.8.30.NC/build_unix BOOST_LIB_PATH=$HOME/build/boost_1_47_0/stage/lib BOOST_INCLUDE_PATH=$HOME/build/boost_1_47_0 BOOST_LIB_SUFFIX=-mt-s BOOST_THREAD_LIB_SUFFIX=_win32-mt-s OPENSSL_LIB_PATH=$HOME/build/openssl-1.0.1b OPENSSL_INCLUDE_PATH=$HOME/build/openssl-1.0.1b/include QRENCODE_LIB_PATH=$HOME/build/qrencode-3.2.0/.libs QRENCODE_INCLUDE_PATH=$HOME/build/qrencode-3.2.0 INCLUDEPATH=$HOME/build DEFINES=BOOST_THREAD_USE_LIB BITCOIN_NEED_QT_PLUGINS=1 QMAKE_LRELEASE=lrelease QMAKE_CXXFLAGS=-frandom-seed=ppcoin QMAKE_LFLAGS=-frandom-seed=ppcoin USE_BUILD_INFO=1
  make $MAKEOPTS
  cp release/litedoge-qt.exe $OUTDIR/
  #
  #
  tar xzf openssl-1.0.1b.tar.gz
  cd openssl-1.0.1b
  ./Configure --cross-compile-prefix=i586-mingw32msvc- mingw
  make
  cd ..
  #
  tar xzf db-4.8.30.NC.tar.gz
  cd db-4.8.30.NC/build_unix
  ../dist/configure --enable-mingw --enable-cxx --host=i586-mingw32msvc CFLAGS="-I/usr/i586-mingw32msvc/include"
  make $MAKEOPTS
  cd ../..
  #
  tar xzf miniupnpc-1.6.tar.gz
  cd miniupnpc-1.6
  sed 's/dllwrap -k --driver-name gcc/$(DLLWRAP) -k --driver-name $(CC)/' -i Makefile.mingw
  sed 's|wingenminiupnpcstrings $< $@|./wingenminiupnpcstrings $< $@|' -i Makefile.mingw
  make -f Makefile.mingw DLLWRAP=i586-mingw32msvc-dllwrap CC=i586-mingw32msvc-gcc AR=i586-mingw32msvc-ar
  cd ..
  mv miniupnpc-1.6 miniupnpc
  #
  tar xzf zlib-1.2.7.tar.gz
  cd zlib-1.2.7
  make -f win32/Makefile.gcc PREFIX=i586-mingw32msvc- $MAKEOPTS
  cd ..
  #
  tar xzf libpng-1.5.12.tar.gz
  cd libpng-1.5.12
  ./configure -disable-shared CC=i586-mingw32msvc-cc AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-mingw32msvc-ranlib OBJDUMP=i586-mingw32msvc-objdump LD=i586-mingw32msvc-ld LDFLAGS="-L../zlib-1.2.7/" CFLAGS="-I../zlib-1.2.7/"
  make $MAKEOPTS
  cd ..
  #
  tar xjf qrencode-3.2.0.tar.bz2
  cd qrencode-3.2.0
  ./configure CC=i586-mingw32msvc-cc AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-mingw32msvc-ranlib OBJDUMP=i586-mingw32msvc-objdump LD=i586-mingw32msvc-ld png_LIBS="../libpng-1.5.12/.libs/libpng15.a ../zlib-1.2.7/libz.a" png_CFLAGS="-I../libpng-1.5.12"
  make $MAKEOPTS
  cd ..
  #
  zip -r $OUTDIR/litedoge-deps-0.0.1.zip \
    $(ls qrencode-*/{qrencode.h,.libs/libqrencode.{,l}a} | sort) \
    $(ls db-*/build_unix/{libdb_cxx.a,db.h,db_cxx.h,libdb.a,.libs/libdb_cxx-?.?.a} | sort) \
    $(find openssl-* -name '*.a' -o -name '*.h' | sort) \
    $(find miniupnpc -name '*.h' -o -name 'libminiupnpc.a' | sort)
  # Kill wine processes as gitian won't figure out we are done otherwise
  killall wineserver services.exe explorer.exe winedevice.exe
